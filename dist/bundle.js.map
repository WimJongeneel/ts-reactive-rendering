{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/diffs.ts","webpack:///./src/main.ts","webpack:///./src/render.ts","webpack:///./src/virtual_dom.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.ts\");\n","import { VDOMAttributes, VDomNode, VDOMTextNode } from \"./virtual_dom\";\r\n\r\ntype AttributesUpdater = {\r\n  set: VDOMAttributes\r\n  remove: string[]\r\n}\r\n\r\ninterface InsertOperation {\r\n  kind: 'insert', node: VDomNode\r\n}\r\n\r\ninterface UpdateOperation {\r\n  kind: 'update',\r\n  attributes: AttributesUpdater,\r\n  childeren: ChildUpdater[]\r\n}\r\n\r\ninterface ReplaceOperation {\r\n  kind: 'replace',\r\n  newNode: VDomNode\r\n}\r\n\r\ninterface RemoveOperation {\r\n  kind: 'remove'\r\n}\r\n\r\ninterface SkipOperation {\r\n  kind: 'skip'\r\n}\r\n\r\nexport type VDomNodeUpdater = \r\n  | UpdateOperation\r\n  | ReplaceOperation\r\n  | RemoveOperation\r\n  | SkipOperation\r\n  \r\nexport type ChildUpdater =\r\n  | UpdateOperation\r\n  | ReplaceOperation\r\n  | RemoveOperation\r\n  | SkipOperation\r\n  | InsertOperation\r\n\r\nconst skip = (): SkipOperation => ({ kind: 'skip' })\r\n\r\nconst replace = (newNode: VDomNode): ReplaceOperation => ({ kind: 'replace', newNode })\r\n\r\nconst update = (attributes: AttributesUpdater, childeren: ChildUpdater[]): UpdateOperation => ({ \r\n   kind: 'update',\r\n   attributes,\r\n   childeren\r\n})\r\n\r\nconst remove = (): RemoveOperation => ({ kind: 'remove' })\r\n\r\nconst insert = (node: VDomNode): InsertOperation => ({ kind: 'insert', node })\r\n\r\nexport const createDiff = (oldNode: VDomNode, newNode: VDomNode, usev2 = false): VDomNodeUpdater => {\r\n  if (oldNode.kind == 'text' && newNode.kind == 'text' && oldNode.text == newNode.text) {\r\n    return skip()\r\n  }\r\n\r\n  /*\r\n   * If a textnode is updated we need to replace it completly\r\n   */\r\n  if (oldNode.kind == 'text' || newNode.kind == 'text') {\r\n    return replace(newNode)\r\n  }\r\n\r\n  /*\r\n   * If the tagname of a node is changed we have to replace it completly\r\n   */\r\n  if (oldNode.tagname != oldNode.tagname) {\r\n    return replace(newNode)\r\n  }\r\n\r\n  const attUpdater: AttributesUpdater = {\r\n    remove: Object.keys(oldNode.attributes)\r\n      .filter(att => Object.keys(newNode.attributes).indexOf(att) == -1),\r\n    set: Object.keys(newNode.attributes)\r\n      .filter(att => oldNode.attributes[att] != newNode.attributes[att])\r\n      .reduce((upd, att) => ({ ...upd, [att]: newNode.attributes[att] }), {})\r\n  }\r\n\r\n  const childsUpdater: ChildUpdater[] = usev2 ? childsDiff1(oldNode.childeren, newNode.childeren) : childsDiff(oldNode.childeren, newNode.childeren)\r\n\r\n  return update(attUpdater, childsUpdater)\r\n}\r\n\r\nconst childsDiff = (oldChilds: Map<string, VDomNode>, newChilds: Map<string, VDomNode>): ChildUpdater[] => {\r\n  const oldTags = Array.from(oldChilds.keys())\r\n  /*\r\n   * Store all the tags of the childs that have to be removed with their presing tag\r\n   * With this we can insert the delete updaters at the correct position\r\n   */\r\n  const removedTags = oldTags\r\n    .map((t, i) => ({ prev: oldTags[i - 1], tag: t }))\r\n    .filter(t => newChilds.has(t.tag) == false)\r\n\r\n  let lastUpdateIndex = 0;\r\n  let updateInSameOrder = true\r\n\r\n  const updates: ChildUpdater[] = []\r\n\r\n  /*\r\n   * If we delete a tag we should also check if that tag itself is a presesor of a deleted tag\r\n   * This happens 2 or more following tags are deleted\r\n   */\r\n  const deleteTagsForTag = (nc: string) => {\r\n    const rmt = removedTags.find(t => t.prev == nc)\r\n    if (rmt) {\r\n      updates.push(remove())\r\n      deleteTagsForTag(rmt.tag)\r\n    }\r\n  }\r\n\r\n  /*\r\n   * If all old tags have been deleted we insert a delete updater for every one of them at the begining\r\n   * We need this because in this case their is no presing tag to connect the deleting on\r\n   */\r\n  if (oldTags.length == removedTags.length) {\r\n    oldTags.forEach(t => updates.push(remove()))\r\n  } else if (\r\n    /*\r\n     * Add a delete updater if the first tag was delete\r\n     * We need this because the first tag has no presesor to connect the deleting to\r\n     */\r\n    removedTags[0] != undefined && removedTags[0].tag == oldTags[0]\r\n  ) {\r\n    updates.push(remove())\r\n  }\r\n\r\n  newChilds.forEach((_, nc) => {\r\n    const isNewChild = oldChilds.has(nc) == false\r\n    /*\r\n     * If we are past the length of the oldChilds we have to insert everything \r\n     * instead of trying to produce an efficient diff\r\n     */\r\n    const isLonger = updates.filter(x => x.kind != 'insert').length >= oldChilds.size\r\n\r\n    if (oldChilds.has(nc) && newChilds.has(nc) && oldTags.indexOf(nc) < lastUpdateIndex) {\r\n      updateInSameOrder = false\r\n    }\r\n\r\n    /*\r\n     * If the order of the keys that exist in both oldChilds and newChilds is different we have to \r\n     * replace the existing nodes (even when we could make a efficienter diff)\r\n     * We only do this for child from the first child that is out of order\r\n     */\r\n    if (updateInSameOrder) {\r\n      lastUpdateIndex = isNewChild ? lastUpdateIndex : oldTags.indexOf(nc)\r\n\r\n      if (isNewChild || isLonger) {\r\n        updates.push(insert(newChilds.get(nc)))\r\n        return\r\n      }\r\n\r\n      updates.push(createDiff(oldChilds.get(nc), newChilds.get(nc)))\r\n      deleteTagsForTag(nc)\r\n      return\r\n    }\r\n\r\n    if (isLonger) {\r\n      updates.push(insert(newChilds.get(nc)))\r\n      return\r\n    } else {\r\n      updates.push(replace(newChilds.get(nc)))\r\n      deleteTagsForTag(nc)\r\n      return\r\n    }\r\n  })\r\n\r\n  return updates\r\n}\r\n\r\nconst childsDiff1 = (oldChilds: Map<string, VDomNode>, newChilds: Map<string, VDomNode>): ChildUpdater[] => {\r\n  const remainingOldChilds = [ ...oldChilds ]\r\n  const operations: ChildUpdater[] = []\r\n\r\n  for(const [newKey, newElem] of newChilds) {\r\n\r\n    if(remainingOldChilds.length == 0) {\r\n      operations.push(insert(newElem))\r\n      continue\r\n    }\r\n    \r\n    let [currentKey, currentElem] = remainingOldChilds[0]\r\n\r\n    if(currentKey == newKey) {\r\n      operations.push(createDiff(currentElem, newElem))\r\n      remainingOldChilds.shift()\r\n      continue\r\n    }\r\n\r\n    // if key is new or already removed\r\n    if(remainingOldChilds.map(([key]) => key).indexOf(newKey) == -1) {\r\n      operations.push(insert(newElem))\r\n      remainingOldChilds.shift()\r\n      continue\r\n    } else {\r\n      while(currentKey != newKey) {\r\n        remainingOldChilds.shift()\r\n        operations.push(remove());\r\n        [currentKey, currentElem] = remainingOldChilds[0]\r\n      }\r\n      if(currentKey != newKey) console.error('remove untill broke')\r\n      operations.push(createDiff(currentElem, newElem))\r\n      remainingOldChilds.shift()\r\n  }\r\n}\r\n\r\nfor(const _ of remainingOldChilds) operations.push(remove())\r\n\r\nreturn operations\r\n}","import { child, createElement, createText } from \"./virtual_dom\";\r\nimport { createDiff } from \"./diffs\";\r\nimport { renderDOM, applyUpdate } from \"./render\";\r\n\r\nconst app = createElement(\r\n  'div',\r\n  { 'id': 'root' },\r\n  child(\r\n    'h1', createElement(\r\n      'h1',\r\n      { 'class': 'header' },\r\n      child('txt', createText('hello world'))\r\n    )\r\n    )\r\n    .set(\r\n      'xx', createElement(\r\n        'h3',\r\n        {},\r\n        child('txt', createText('h3 first'))\r\n      )\r\n  )\r\n  .set(\r\n    'foo', createElement(\r\n      'div',\r\n      {},\r\n      child('txt', createText('FOO'))\r\n    )\r\n)\r\n)\r\n\r\nconst app1 = createElement(\r\n  'div',\r\n  { 'id': 'root-updated' },\r\n  child(\r\n    'h3', createElement(\r\n      'h1',\r\n      { 'class': 'header' },\r\n      child('txt', createText('hello world - updated'))\r\n    )\r\n  ).set(\r\n    'xx', createElement(\r\n      'h3',\r\n      {},\r\n      child('txt', createText('h3 new'))\r\n    )\r\n  )\r\n  .set(\r\n    'yy', createElement(\r\n      'h3',\r\n      {},\r\n      child('txt', createText('h3 2nd'))\r\n    )\r\n  )\r\n)\r\n\r\nconst app2 = createElement(\r\n  'div',\r\n  { 'id': 'root-updated' },\r\n  child(\r\n    'yy', createElement(\r\n      'h3',\r\n      {},\r\n      child('txt', createText('h3 2nd'))\r\n    )\r\n  )\r\n)\r\n\r\nconst rootElem = renderDOM('root', app)\r\n\r\n\r\nconst diffV2 = createDiff(app, app1, true)\r\nconsole.log(diffV2)\r\n\r\nsetTimeout(() => applyUpdate(rootElem, diffV2, rootElem), 1500)\r\n\r\nconst diffV3 = createDiff(app1, app2, true)\r\nconsole.log(diffV3)\r\n\r\n\r\nsetTimeout(() => applyUpdate(rootElem, diffV3, rootElem), 3000)\r\n","import { VDomNode } from \"./virtual_dom\";\r\nimport { VDomNodeUpdater } from \"./diffs\";\r\n\r\nconst renderElement = (rootNode: VDomNode): HTMLElement | Text => {\r\n  if (rootNode.kind == 'text') {\r\n    return document.createTextNode(rootNode.text)\r\n  }\r\n\r\n  const elem = document.createElement(rootNode.tagname)\r\n\r\n  for (const att in rootNode.attributes) {\r\n    elem.setAttribute(att, rootNode.attributes[att].toString())\r\n  }\r\n\r\n  rootNode.childeren.forEach(child =>\r\n    elem.appendChild(renderElement(child))\r\n  )\r\n\r\n  return elem\r\n}\r\n\r\nexport const applyUpdate = (elem: HTMLElement, updater: VDomNodeUpdater, parent: HTMLElement): void => {\r\n  if (updater.kind == 'skip') {\r\n    return\r\n  }\r\n\r\n  if (updater.kind == 'replace') {\r\n    elem.replaceWith(renderElement(updater.newNode))\r\n    return\r\n  }\r\n\r\n  if (updater.kind == 'remove') {\r\n    elem.remove()\r\n    return\r\n  }\r\n\r\n  for (const att in updater.attributes.remove) {\r\n    elem.removeAttribute(att)\r\n  }\r\n\r\n  for (const att in updater.attributes.set) {\r\n    elem.setAttribute(att, updater.attributes.set[att].toString())\r\n  }\r\n\r\n  let offset = 0\r\n  for (let i = 0; i < updater.childeren.length; i++) {\r\n    const childUpdater = updater.childeren[i]\r\n\r\n    if (childUpdater.kind == 'skip') {\r\n      continue\r\n    }\r\n\r\n    if (childUpdater.kind == 'insert') {\r\n      if (elem.childNodes[i + offset - 1]) {\r\n        elem.childNodes[i + offset - 1].after(renderElement(childUpdater.node))\r\n      } else {\r\n        // this isn't correct if the diff starts of with insert and then remove\r\n        parent.appendChild(renderElement(childUpdater.node))\r\n      }\r\n      continue\r\n    }\r\n\r\n    const childElem = elem.childNodes[i + offset]\r\n\r\n    if (childUpdater.kind == 'remove') {\r\n      childElem.remove()\r\n      offset -= 1\r\n      continue\r\n    }\r\n\r\n\r\n    if (childUpdater.kind == 'replace') {\r\n      childElem.replaceWith(renderElement(childUpdater.newNode))\r\n      continue;\r\n    }\r\n\r\n    applyUpdate(childElem as HTMLElement, childUpdater, elem)\r\n  }\r\n}\r\n\r\nexport const renderDOM = (htmlId: string, rootNode: VDomNode): HTMLElement => {\r\n  const elem = document.getElementById(htmlId)\r\n  if (elem == null) {\r\n    throw new Error('Container elem not found')\r\n  }\r\n\r\n  const parent = elem.parentElement\r\n\r\n  elem.replaceWith(renderElement(rootNode))\r\n\r\n  return parent.children[0] as HTMLElement\r\n}","export type VDOMAttributes = { [_: string]: string | number | boolean }\r\n\r\nexport interface VDOMElement {\r\n  kind: 'elem'\r\n  tagname: string\r\n  attributes: VDOMAttributes\r\n  childeren: Map<string, VDomNode>\r\n}\r\n\r\nexport interface VDOMTextNode {\r\n  kind: 'text',\r\n  text: string\r\n}\r\n\r\nexport type VDomNode = \r\n  | VDOMTextNode\r\n  | VDOMElement\r\n\r\nexport const createElement = (tagname: string, attributes: VDOMAttributes = {}, childeren: Map<string, VDomNode> = new Map()): VDOMElement => ({\r\n  kind: 'elem',\r\n  tagname,\r\n  attributes,\r\n  childeren\r\n})\r\n\r\nexport const createText = (text: string): VDOMTextNode => ({\r\n  kind: 'text',\r\n  text\r\n})\r\n\r\nexport const child = (tagname: string, elem: VDomNode) => createEmptyChildsMap().set(tagname, elem)\r\n\r\nexport const createEmptyChildsMap = () => new Map<string, VDomNode>()"],"sourceRoot":""}